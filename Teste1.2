import numpy as np 
import cv2
import urllib


from visual_odometry import PinholeCamera, VisualOdometry


cam = PinholeCamera(1241.0, 376.0, 718.8560, 718.8560, 607.1928, 185.2157)
vo = VisualOdometry(cam)

traj = np.zeros((600,600,3), dtype=np.uint8)

url='http://192.168.0.100:8080/shot.jpg'
i=0

for img_id in xrange(4541):
        imgResp=urllib.urlopen(url)
        imgNp=np.array(bytearray(imgResp.read()),dtype=np.uint8)
        img2=cv2.imdecode(imgNp,-1)
        frame=img2
        image_gray = cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY)
        img3=cv2.resize(image_gray,(1241,376))
        cv2.imwrite('/home/paulo/Documentos/dataseet2/' 
 +str(i).zfill(6)+'.jpg',img3)
        i+=1
        print i
        img = cv2.imread('/home/paulo/Documentos/dataseet2/'+str(img_id).zfill(6)+'.jpg', 0)
        #print('/home/paulo/Documentos/Dataseet/'+str(img_id).zfill(6)+'.jpg')
	vo.update(img, img_id)
	cur_t = vo.cur_t
        cur_R = vo.cur_R
	if(img_id > 2):
		x, y, z = cur_t[0], cur_t[1], cur_t[2]
	else:
		x, y, z = 0., 0., 0.
	draw_x, draw_y = int(x)+290, int(z)+290
	true_x, true_y = int(vo.trueX)+290, int(vo.trueZ)+90

	cv2.circle(traj, (draw_x,draw_y), 1, (img_id*255/4540,255-img_id*255/4540,0), 1)
	cv2.circle(traj, (true_x,true_y), 1, (0,0,255), 2)
	cv2.rectangle(traj, (10, 20), (600, 60), (0,0,0), -1)
	text = "x=%2fm y=%2fm z=%2fm"%(x,y,z)
        
        arq = open('/tmp/lista.txt', 'w')
        texto = arq.read()
        print(text)
        arq.close()

      
        print(x,y,z)
        print(cur_R)
        #print(cur_t)
	cv2.putText(traj, text, (20,40), cv2.FONT_HERSHEY_PLAIN, 1, (255,255,255), 1, 8)

	cv2.imshow('Road facing camera', img)
	cv2.imshow('Trajectory', traj)
	cv2.waitKey(1)

cv2.imwrite('map.png', traj)
